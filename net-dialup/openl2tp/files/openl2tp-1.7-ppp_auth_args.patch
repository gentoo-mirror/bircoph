In ppp_unix_params_to_argv (ppp_unix.c:168) when the refuse-*
arguments to pppd are determined, only the value of flags2 is
considered. However, in l 2tp_parse_ppp_profile_arg
(l2tp_config.c:3273) where the values are parsed, the flags2 field is
used only to indicate that the field value for the opt ion has been
set. This has the effect that if a user sets auth_mschapv2=ye s in
openl2tpd.conf refuse-mschapv2 will be passed to pppd (since L2TP_API_
PPP_PROFILE_FLAG_AUTH_REFUSE_MSCHAPV2 is set in flags2, but the
auth_refuse _mschapv2 field is set to 0). I have attached a patch
which corrects this behavior to consider the value of the field when
determining whether to add the argument to pppd. (kevinoid@users.sf.net)

--- openl2tp-1.7.orig/plugins/ppp_unix.c	2008-08-05 10:33:49.000000000 -0600
+++ openl2tp-1.7/plugins/ppp_unix.c	2010-04-04 14:25:34.964151271 -0600
@@ -285,19 +285,24 @@
 	}
 
 	/* ppp auth options */
-	if (params->flags2 & L2TP_API_PPP_PROFILE_FLAG_AUTH_REFUSE_EAP) {
+	if ((params->flags2 & L2TP_API_PPP_PROFILE_FLAG_AUTH_REFUSE_EAP) &&
+	     params->auth_refuse_eap) {
 		argv[arg++] = "refuse-eap";
 	}
-	if (params->flags2 & L2TP_API_PPP_PROFILE_FLAG_AUTH_REFUSE_MSCHAPV2) {
+	if ((params->flags2 & L2TP_API_PPP_PROFILE_FLAG_AUTH_REFUSE_MSCHAPV2) &&
+	     params->auth_refuse_mschapv2) {
 		argv[arg++] = "refuse-mschap-v2";
 	}
-	if (params->flags2 & L2TP_API_PPP_PROFILE_FLAG_AUTH_REFUSE_MSCHAP) {
+	if ((params->flags2 & L2TP_API_PPP_PROFILE_FLAG_AUTH_REFUSE_MSCHAP) &&
+	     params->auth_refuse_mschap) {
 		argv[arg++] = "refuse-mschap";
 	}
-	if (params->flags2 & L2TP_API_PPP_PROFILE_FLAG_AUTH_REFUSE_CHAP) {
+	if ((params->flags2 & L2TP_API_PPP_PROFILE_FLAG_AUTH_REFUSE_CHAP) &&
+	     params->auth_refuse_chap) {
 		argv[arg++] = "refuse-chap";
 	}
-	if (params->flags2 & L2TP_API_PPP_PROFILE_FLAG_AUTH_REFUSE_PAP) {
+	if ((params->flags2 & L2TP_API_PPP_PROFILE_FLAG_AUTH_REFUSE_PAP) &&
+	     params->auth_refuse_pap) {
 		argv[arg++] = "refuse-pap";
 	}
 
@@ -313,25 +318,53 @@
 				       L2TP_API_PPP_PROFILE_FLAG_AUTH_REFUSE_MSCHAP |
 				       L2TP_API_PPP_PROFILE_FLAG_AUTH_REFUSE_CHAP |
 				       L2TP_API_PPP_PROFILE_FLAG_AUTH_REFUSE_PAP);
-	if (auth_flags == (L2TP_API_PPP_PROFILE_FLAG_AUTH_REFUSE_EAP |
+	if ((auth_flags & ~L2TP_API_PPP_PROFILE_FLAG_AUTH_REFUSE_PAP) ==
+			  (L2TP_API_PPP_PROFILE_FLAG_AUTH_REFUSE_EAP |
 			   L2TP_API_PPP_PROFILE_FLAG_AUTH_REFUSE_MSCHAPV2 |
 			   L2TP_API_PPP_PROFILE_FLAG_AUTH_REFUSE_MSCHAP |
-			   L2TP_API_PPP_PROFILE_FLAG_AUTH_REFUSE_CHAP)) {
+			   L2TP_API_PPP_PROFILE_FLAG_AUTH_REFUSE_CHAP) &&
+	    params->auth_refuse_eap &&
+	    params->auth_refuse_mschapv2 &&
+	    params->auth_refuse_mschap &&
+	    params->auth_refuse_chap &&
+	    (!(auth_flags & L2TP_API_PPP_PROFILE_FLAG_AUTH_REFUSE_PAP) ||
+		!params->auth_refuse_pap)) {
 		argv[arg++] = "require-pap";
-	} else if (auth_flags == (L2TP_API_PPP_PROFILE_FLAG_AUTH_REFUSE_EAP |
+	} else if ((auth_flags & ~L2TP_API_PPP_PROFILE_FLAG_AUTH_REFUSE_CHAP) ==
+				 (L2TP_API_PPP_PROFILE_FLAG_AUTH_REFUSE_EAP |
 				  L2TP_API_PPP_PROFILE_FLAG_AUTH_REFUSE_MSCHAPV2 |
 				  L2TP_API_PPP_PROFILE_FLAG_AUTH_REFUSE_MSCHAP |
-				  L2TP_API_PPP_PROFILE_FLAG_AUTH_REFUSE_PAP)) {
+				  L2TP_API_PPP_PROFILE_FLAG_AUTH_REFUSE_PAP) &&
+		   params->auth_refuse_eap &&
+	    	   params->auth_refuse_mschapv2 &&
+	    	   params->auth_refuse_mschap &&
+	    	   params->auth_refuse_pap &&
+		   (!(auth_flags & L2TP_API_PPP_PROFILE_FLAG_AUTH_REFUSE_CHAP) ||
+			!params->auth_refuse_chap)) {
 		argv[arg++] = "require-chap";
-	} else if (auth_flags == (L2TP_API_PPP_PROFILE_FLAG_AUTH_REFUSE_EAP |
+	} else if ((auth_flags & ~L2TP_API_PPP_PROFILE_FLAG_AUTH_REFUSE_MSCHAP) ==
+				 (L2TP_API_PPP_PROFILE_FLAG_AUTH_REFUSE_EAP |
 				  L2TP_API_PPP_PROFILE_FLAG_AUTH_REFUSE_MSCHAPV2 |
 				  L2TP_API_PPP_PROFILE_FLAG_AUTH_REFUSE_CHAP |
-				  L2TP_API_PPP_PROFILE_FLAG_AUTH_REFUSE_PAP)) {
+				  L2TP_API_PPP_PROFILE_FLAG_AUTH_REFUSE_PAP) &&
+		   params->auth_refuse_eap &&
+	    	   params->auth_refuse_mschapv2 &&
+	    	   params->auth_refuse_chap &&
+	    	   params->auth_refuse_pap &&
+		   (!(auth_flags & L2TP_API_PPP_PROFILE_FLAG_AUTH_REFUSE_MSCHAP) ||
+			!params->auth_refuse_mschap)) {
 		argv[arg++] = "require-mschap";
-	} else if (auth_flags == (L2TP_API_PPP_PROFILE_FLAG_AUTH_REFUSE_EAP |
+	} else if ((auth_flags & ~L2TP_API_PPP_PROFILE_FLAG_AUTH_REFUSE_MSCHAPV2) ==
+				 (L2TP_API_PPP_PROFILE_FLAG_AUTH_REFUSE_EAP |
 				  L2TP_API_PPP_PROFILE_FLAG_AUTH_REFUSE_MSCHAP |
 				  L2TP_API_PPP_PROFILE_FLAG_AUTH_REFUSE_CHAP |
-				  L2TP_API_PPP_PROFILE_FLAG_AUTH_REFUSE_PAP)) {
+				  L2TP_API_PPP_PROFILE_FLAG_AUTH_REFUSE_PAP) &&
+		   params->auth_refuse_eap &&
+	    	   params->auth_refuse_mschap &&
+	    	   params->auth_refuse_chap &&
+	    	   params->auth_refuse_pap &&
+		   (!(auth_flags & L2TP_API_PPP_PROFILE_FLAG_AUTH_REFUSE_MSCHAPV2) ||
+			!params->auth_refuse_mschapv2)) {
 		argv[arg++] = "require-mschap-v2";
 	}
 

 	  	 
