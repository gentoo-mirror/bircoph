--- zbar-0.10/configure.ac.orig	2009-10-23 22:16:44.000000000 +0400
+++ zbar-0.10/configure.ac	2011-11-06 02:58:15.968375890 +0400
@@ -147,19 +147,13 @@
 with_video="no"
 AS_IF([test "x$enable_video" != "xno"],
   [AS_IF([test "x$win32" = "xno"],
-    [AC_CHECK_HEADERS([linux/videodev.h], [with_video="v4l1"],
-      [AC_MSG_FAILURE([test for video support failed!
-rebuild your kernel to include video4linux support or
-configure --disable-video to skip building video support.])])
-       AC_CHECK_HEADERS([linux/videodev2.h], [with_video="v4l2"],
+    [AC_CHECK_HEADERS([linux/videodev2.h], [with_video="v4l2"],
          [AC_MSG_WARN([v4l2 API not detected, upgrade your kernel!])])],
     [AC_CHECK_HEADERS([vfw.h], [with_video="vfw"],
       [AC_MSG_FAILURE([test for VfW video support failed!
 configure --disable-video to skip building vidoe support.])])])
 ])
 AM_CONDITIONAL([HAVE_VIDEO], [test "x$enable_video" != "xno"])
-AM_CONDITIONAL([HAVE_V4L1],
-  [test "x$with_video" = "xv4l1" || test "x$with_video" = "xv4l2"])
 AM_CONDITIONAL([HAVE_V4L2], [test "x$with_video" = "xv4l2"])
 
 dnl X
--- zbar-0.10/zbar/Makefile.am.inc.orig	2009-10-23 22:16:44.000000000 +0400
+++ zbar-0.10/zbar/Makefile.am.inc	2011-11-06 03:13:47.867245599 +0400
@@ -53,12 +53,9 @@
 zbar_libzbar_la_SOURCES += zbar/processor/posix.h zbar/processor/posix.c
 endif
 
-if HAVE_V4L1
-zbar_libzbar_la_SOURCES += zbar/video/v4l1.c
 if HAVE_V4L2
 zbar_libzbar_la_SOURCES += zbar/video/v4l2.c
 endif
-endif
 if WIN32
 if HAVE_VIDEO
 zbar_libzbar_la_SOURCES += zbar/video/vfw.c
--- zbar-0.10/zbar/video/v4l2.c.orig	2011-11-06 03:32:13.000000000 +0400
+++ zbar-0.10/zbar/video/v4l2.c	2011-11-06 03:32:27.375637715 +0400
@@ -39,6 +39,9 @@
 # include <sys/mman.h>
 #endif
 #include <linux/videodev2.h>
+#include <sys/stat.h>
+#include <unistd.h>
+#include <fcntl.h>
 
 #include "video.h"
 #include "image.h"
--- zbar-0.10/zbar/video/v4l2.c.orig	2009-10-23 22:16:44.000000000 +0400
+++ zbar-0.10/zbar/video/v4l2.c	2011-11-06 03:27:14.339589715 +0400
@@ -507,3 +507,23 @@
     vdo->dq = v4l2_dq;
     return(0);
 }
+
+int _zbar_video_open (zbar_video_t *vdo,
+                      const char *dev)
+{
+    vdo->fd = open(dev, O_RDWR);
+    if(vdo->fd < 0)
+        return(err_capture_str(vdo, SEV_ERROR, ZBAR_ERR_SYSTEM, __func__,
+                               "opening video device '%s'", dev));
+    zprintf(1, "opened camera device %s (fd=%d)\n", dev, vdo->fd);
+
+    int rc = -1;
+    if(vdo->intf != VIDEO_V4L1)
+        rc = _zbar_v4l2_probe(vdo);
+
+    if(rc && vdo->fd >= 0) {
+        close(vdo->fd);
+        vdo->fd = -1;
+    }
+    return(rc);
+}
